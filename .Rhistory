View(sp_cat)
sp_cat <- sp_cat %>% mutate(Indices= c("SPI3", "SPI6", "SPI12", "SPEI3", "SPEI6", "SPEI12"))
data.frame(
data.frame(
sp_cat <- data.frame(do.call(rbind, lapply(drought_categories, table)))
sp_cat <- sp_cat %>% mutate(Indices= c("SPI3", "SPI6", "SPI12", "SPEI3", "SPEI6", "SPEI12")
)
gc()
# Load necessary libraries
pacman::p_load(readxl, ggplot2, dplyr, tidyr, SPEI, drought, Kendall,
lubridate, tidyverse, MASS, broom, trend, openxlsx, tseries, changepoint)
#Source All Functions
function_files <- list.files("functions", pattern = "\\.R$", full.names = TRUE)
for (file in function_files) {
source(file)
}
message("All functions and libraries initialized successfully!")
# Load Excel sheets
excelsheets <- excel_sheets("dataset/droughtdat.xlsx")
sheet <- excelsheets[1]
sheetstation <- sheet
sample_station <- read_excel("dataset/droughtdat.xlsx", sheet = sheet)
# Extract latitude
lat <- sample_station$Lat[1]
# Calculate PET, SHI, and other indices
sample_station <-  calculate_indices(sample_station, lat_col = lat)
sample_station <- clean_na_inf (sample_station, replace_with = 0)
# Calculate total years
total_years <- sample_station %>% pull(Year) %>% unique() %>% length()
total_years <- as.numeric(total_years)
# Yearly summary
year_summary <- yearly_summary_function(sample_station)
# Categorize drought events# Categorize drought events# Categorize drought events
sample_station <- sample_station %>%
mutate(
spi3_cat = categorize_spi(spi3),
spi6_cat = categorize_spi(spi6),
spi12_cat = categorize_spi(spi12),
spei3_cat = categorize_spei(spei3),
spei6_cat = categorize_spei(spei6),
spei12_cat = categorize_spei(spei12)
)
# Summarize drought events by year
drought_counts <- yearly_drought_categories_occurrences_calculation(sample_station)
# Pivot SPI data
drought_long_spi <- pivot_drought_data(drought_counts, prefix = "spi")
# Pivot SPEI data
drought_long_spei <- pivot_drought_data(drought_counts, prefix = "spei")
# SPI distribution plot
plot1 <- plot_drought_distribution(
data = drought_long_spi,
category = "Category",
count_col = "Count",
title_prefix = sheetstation
)
# SPEI distribution plot
plot2 <- plot_drought_distribution(
data = drought_long_spei,
category = "Category",
count_col = "Count",
title_prefix = sheetstation
)
# Bar plot of drought categories over the years
drought_long_spi <- pivot_drought_data_with_index(
data = drought_counts,
prefix = "spi"
)
plot3 <- plot_drought_categories(
data = drought_long_spi,
index_col = "Index",
category = "Category",
count_col = "Count",
title_prefix = sheetstation
)
drought_long_spei <- pivot_drought_data_with_index(
data = drought_counts,
prefix = "spei"
)
plot4 <- plot_drought_categories(
data = drought_long_spei,
index_col = "Index",
category = "Category",
count_col = "Count",
title_prefix = sheetstation
)
plot5 <- indices_bar_plot(sample_station, c("spi6", "spei6"), paste0(sheetstation, " SPI6 and SPEI6 Indices Over Time"), "spi6, spei6")
plot6 <- indices_bar_plot(sample_station, c("spi3", "spei3"), paste0(sheetstation, " SPI3 and SPEI3 Indices Over Time"), "spi3, spei3")
plot7 <- indices_bar_plot(sample_station, c("spi12", "spei12"), paste0(sheetstation, " SPI12 and SPEI12 Indices Over Time"), "spi12, spei12")
# Boxplot of drought categories for spi
drought_long_boxplot <-  pivot_drought_boxplot_data(
data = drought_counts,
prefix = "spi"
)
plot8 <- plot_drought_boxplot(
data = drought_long_boxplot,
category = "Category",
count_col = "Count",
title = "Boxplot of Drought Categories"
)
# Categorize indices
indices <- list(spi3 = sample_station$spi3,
spi6 = sample_station$spi6,
spi12 = sample_station$spi12,
spei3 = sample_station$spei3,
spei6 = sample_station$spei6,
spei12 = sample_station$spei12)
drought_categories <-  data.frame(lapply(indices, create_drought_categories))
index_names <- c("SPI3", "SPI6", "SPI12", "SPEI3", "SPEI6", "SPEI12")
sp_cat <- cbind(Index = index_names, sp_cat)
sp_cat <- data.frame(do.call(rbind, lapply(drought_categories, table)))
View(sp_cat)
sp_cat <- cbind(Index = index_names, sp_cat)
gc()
source("~/Documents/DROUGHT ANALYSIS /test.R")
index_names <- r("SPI-3", "SPI-6", "SPI-12", "SPEI-3", "SPEI-6", "SPEI-12")
index_names <- c("SPI-3", "SPI-6", "SPI-12", "SPEI-3", "SPEI-6", "SPEI-12")
sp_cat <- data.frame(do.call(cbind, lapply(drought_categories, table)))
sp_cat <- rbind(Index = index_names, sp_cat)
gc()
source("~/Documents/DROUGHT ANALYSIS /test.R")
gc()
source("~/Documents/DROUGHT ANALYSIS /test.R")
# Create drought categories for all indices
create_drought_categories <- function(data, breaks = c(-Inf, -2, -1.5, -1, -0.99, 0.99, 1.0, 1.49, 1.99, 2.00, Inf),
labels = c("Extreme drought", "Severe drought", "Moderate drought", "Mild drought",
"Moderately wet", "Very wet", "Extremely wet")) {
cut(data, breaks = breaks, labels = labels)
}
drought_categories <-  data.frame(lapply(indices, create_drought_categories))
create_drought_categories <- function(data, breaks = c(-Inf, -2, -1.5, -1, -0.99, 0.99, 1.0, 1.49, 1.99, 2.00, Inf),
labels = c("Extreme drought", "Severe drought", "Moderate drought", "Mild drought",
"Moderately wet", "Very wet", "Extremely wet", "Extremely wet",
"Very wet", "Moderately wet")) {
cut(data, breaks = breaks, labels = labels, right = FALSE)
}
drought_categories <-  data.frame(lapply(indices, create_drought_categories))
drought_categories <-  lapply(indices, create_drought_categories)
index_names <- c("SPI-3", "SPI-6", "SPI-12", "SPEI-3", "SPEI-6", "SPEI-12")
sp_cat <- data.frame(do.call(rbind, lapply(drought_categories, table)))
sp_cat <- cbind(Index = index_names, sp_cat)
View(sp_cat)
# SPI and SPEI indices over time
indices_bar_plot <- function(data, y_vars, title, y_label) {
plot <- ggplot(data, aes(x = factor(Year))) +  # Use factor for Year to treat it as discrete values
geom_line(aes(y = !!sym(y_vars[1]), fill = "SPI"), width = 0.1, position = position_dodge(width = 0.2)) +  # Side-by-side dodge
geom_line(aes(y = !!sym(y_vars[2]), fill = "SPEI"), width = 0.1, position = position_dodge(width = 0.3)) +  # Same dodge for SPEI
scale_x_discrete(breaks = seq(min(data$Year), max(data$Year), by = 2)) +  # Year intervals set to 2
labs(title = title, x = "Year", y = y_label) +
scale_fill_manual(values = c("SPI" = "blue", "SPEI" = "red")) +  # Custom colors for SPI and SPEI
theme_minimal() +
theme(legend.title = element_blank(), axis.text.x = element_text(angle = 90, hjust = 1))  # Remove legend title and rotate x-axis labels
print(plot)
return(plot)
}
plot5 <- indices_bar_plot(sample_station, c("spi6", "spei6"), paste0(sheetstation, " SPI6 and SPEI6 Indices Over Time"), "spi6, spei6")
# SPI and SPEI indices over time
indices_bar_plot <- function(data, y_vars, title, y_label) {
data <- data %>%
gather(key = "Index", value = "Value", y_vars)  # Reshape data for ggplot2
plot <- ggplot(data, aes(x = Year, y = Value, color = Index)) +  # Color by Index
geom_line(size = 1) +  # Line plot with specified size
scale_x_continuous(breaks = seq(min(data$Year), max(data$Year), by = 2)) +  # Year intervals set to 2
labs(title = title, x = "Year", y = y_label) +
scale_color_manual(values = c("SPI" = "orange", "SPEI" = "blue")) +  # Custom colors for SPI and SPEI
theme_minimal() +
theme(legend.title = element_blank(), axis.text.x = element_text(angle = 90, hjust = 1))  # Remove legend title and rotate x-axis labels
print(plot)
return(plot)
}
plot5 <- indices_bar_plot(sample_station, c("spi6", "spei6"), paste0(sheetstation, " SPI6 and SPEI6 Indices Over Time"), "spi6, spei6")
plot5 <- indices_bar_plot(year_summary, c("spi6", "spei6"), paste0(sheetstation, " SPI6 and SPEI6 Indices Over Time"), "spi6, spei6")
indices_bar_plot <- function(data, y_vars, title, y_label) {
data_long <- data %>%
select(Year, all_of(y_vars)) %>%
pivot_longer(cols = y_vars, names_to = "Index", values_to = "Value")
plot <- ggplot(data_long, aes(x = Year, y = Value, color = Index)) +  # Color by Index
geom_line(size = 1) +  # Line plot with specified size
scale_x_continuous(breaks = seq(min(data$Year), max(data$Year), by = 5)) +  # Year intervals set to 5 for better spacing
labs(title = title, x = "Year", y = y_label) +
scale_color_manual(values = c("SPI" = "orange", "SPEI" = "blue")) +  # Custom colors for SPI and SPEI
theme_minimal() +
theme(legend.title = element_blank(), axis.text.x = element_text(angle = 90, hjust = 1))  # Remove legend title and rotate x-axis labels
print(plot)
return(plot)
}
plot5 <- indices_bar_plot(sample_station, c("spi6", "spei6"), paste0(sheetstation, " SPI6 and SPEI6 Indices Over Time"), "spi6, spei6")
indices_bar_plot <- function(data, y_vars, title, y_label) {
data_long <- data %>%
select(Year, all_of(y_vars)) %>%
pivot_longer(cols = y_vars, names_to = "Index", values_to = "Value")
plot <- ggplot(data_long, aes(x = Year, y = Value, color = Index)) +  # Color by Index
geom_line(size = 1) +  # Line plot with specified size
scale_x_continuous(breaks = seq(min(data$Year), max(data$Year), by = 5)) +  # Year intervals set to 5 for better spacing
labs(title = title, x = "Year", y = y_label) +
scale_color_manual(values = c("SPI" = "orange", "SPEI" = "blue")) +  # Custom colors for SPI and SPEI
theme_minimal() +
theme(legend.title = element_blank(), axis.text.x = element_text(angle = 90, hjust = 1))  # Remove legend title and rotate x-axis labels
print(plot)
return(plot)
}
plot5 <- indices_bar_plot(sample_station, c("spi6", "spei6"), paste0(sheetstation, " SPI6 and SPEI6 Indices Over Time"), "spi6, spei6")
indices_bar_plot <- function(data, y_vars, title, y_label) {
plot <- ggplot(data, aes(x = factor(Year))) +  # Use factor for Year to treat it as discrete values
geom_line(aes(y = !!sym(y_vars[1]), fill = "SPI"), width = 0.1, position = position_dodge(width = 0.2)) +  # Side-by-side dodge
geom_line(aes(y = !!sym(y_vars[2]), fill = "SPEI"), width = 0.1, position = position_dodge(width = 0.3)) +  # Same dodge for SPEI
scale_x_discrete(breaks = seq(min(data$Year), max(data$Year), by = 2)) +  # Year intervals set to 2
labs(title = title, x = "Year", y = y_label) +
scale_fill_manual(values = c("SPI" = "blue", "SPEI" = "red")) +  # Custom colors for SPI and SPEI
theme_minimal() +
theme(legend.title = element_blank(), axis.text.x = element_text(angle = 90, hjust = 1))  # Remove legend title and rotate x-axis labels
print(plot)
return(plot)
}
plot5 <- indices_bar_plot(sample_station, c("spi6", "spei6"), paste0(sheetstation, " SPI6 and SPEI6 Indices Over Time"), "spi6, spei6")
plot5 <- indices_bar_plot(year_summary, c("spi6", "spei6"), paste0(sheetstation, " SPI6 and SPEI6 Indices Over Time"), "spi6, spei6")
plot5 <- indices_bar_plot(year_summary, c("spi6", "spei6"), paste0(sheetstation, " SPI6 and SPEI6 Indices Over Time"), "spi6, spei6")
plot5 <- indices_bar_plot(year_summary, c("spi6", "spei6"), paste0(sheetstation, " SPI6 and SPEI6 Indices Over Time"), "spi6, spei6")
plot6 <- indices_bar_plot(sample_station, c("spi3", "spei3"), paste0(sheetstation, " SPI3 and SPEI3 Indices Over Time"), "spi3, spei3")
indices_bar_plot <- function(data, y_vars, title, y_label) {
data <- data %>%
gather(key = "Index", value = "Value", y_vars)  # Reshape data for ggplot2
plot <- ggplot(data, aes(x = Year, y = Value, color = Index)) +  # Color by Index
geom_line(size = 1) +  # Line plot with specified size
scale_x_continuous(breaks = seq(min(data$Year), max(data$Year), by = 2)) +  # Year intervals set to 2
labs(title = title, x = "Year", y = y_label) +
scale_color_manual(values = c("SPI" = "orange", "SPEI" = "blue")) +  # Custom colors for SPI and SPEI
theme_minimal() +
theme(legend.title = element_blank(), axis.text.x = element_text(angle = 90, hjust = 1))  # Remove legend title and rotate x-axis labels
print(plot)
return(plot)
}
plot5 <- indices_bar_plot(year_summary, c("spi6", "spei6"), paste0(sheetstation, " SPI6 and SPEI6 Indices Over Time"), "spi6, spei6")
indices_bar_plot <- function(data, y_vars, title, y_label) {
# Reshape data for ggplot2
data <- data %>%
gather(key = "Index", value = "Value", all_of(y_vars))
# Plot with specified colors for each index
plot <- ggplot(data, aes(x = Year, y = Value, color = Index)) +
geom_line(size = 1) +
scale_x_continuous(breaks = seq(min(data$Year), max(data$Year), by = 2)) +
labs(title = title, x = "Year", y = y_label) +
scale_color_manual(values = c("SPI" = "orange", "SPEI" = "blue")) +
theme_minimal() +
theme(
legend.title = element_blank(),
axis.text.x = element_text(angle = 90, hjust = 1)
)
print(plot)
return(plot)
}
plot5 <- indices_bar_plot(year_summary, c("spi6", "spei6"), paste0(sheetstation, " SPI6 and SPEI6 Indices Over Time"), "spi6, spei6")
library(ggplot2)
library(tidyr)
library(dplyr)
indices_bar_plot <- function(data, y_vars, title, y_label) {
# Check the structure of data and y_vars
print("Structure of data:")
str(data)
print("y_vars:")
print(y_vars)
# Reshape data for ggplot2
data <- data %>%
gather(key = "Index", value = "Value", all_of(y_vars))
# Check the levels of the Index variable
print("Levels of Index after gathering:")
print(unique(data$Index))
# Plot with specified colors for each index
plot <- ggplot(data, aes(x = Year, y = Value, color = Index)) +
geom_line(size = 1) +
scale_x_continuous(breaks = seq(min(data$Year), max(data$Year), by = 2)) +
labs(title = title, x = "Year", y = y_label) +
scale_color_manual(values = c("SPI" = "orange", "SPEI" = "blue")) +
theme_minimal() +
theme(
legend.title = element_blank(),
axis.text.x = element_text(angle = 90, hjust = 1)
)
print(plot)
return(plot)
}
# Example usage with sample data
# data <- data.frame(
#   Year = c(2000:2020),
#   SPI = runif(21, -2, 2),
#   SPEI = runif(21, -2, 2)
# )
# indices_bar_plot(data, c("SPI", "SPEI"), "SPI and SPEI Over Years", "Index Value")
library(ggplot2)
library(tidyr)
library(dplyr)
indices_bar_plot <- function(data, y_vars, title, y_label) {
# Check the structure of data and y_vars
print("Structure of data:")
str(data)
print("y_vars:")
print(y_vars)
# Reshape data for ggplot2
data <- data %>%
gather(key = "Index", value = "Value", all_of(y_vars))
# Check the levels of the Index variable
print("Levels of Index after gathering:")
print(unique(data$Index))
# Plot with specified colors for each index
plot <- ggplot(data, aes(x = Year, y = Value, color = Index)) +
geom_line(size = 1) +
scale_x_continuous(breaks = seq(min(data$Year), max(data$Year), by = 2)) +
labs(title = title, x = "Year", y = y_label) +
scale_color_manual(values = c("SPI" = "orange", "SPEI" = "blue")) +
theme_minimal() +
theme(
legend.title = element_blank(),
axis.text.x = element_text(angle = 90, hjust = 1)
)
print(plot)
return(plot)
}
plot5 <- indices_bar_plot(year_summary, c("spi6", "spei6"), paste0(sheetstation, " SPI6 and SPEI6 Indices Over Time"), "spi6, spei6")
indices_bar_plot <- function(data, y_vars, title, y_label) {
# Reshape data for ggplot2
data <- data %>%
gather(key = "Index", value = "Value", all_of(y_vars))
# Check the levels of the Index variable
print("Levels of Index after gathering:")
print(unique(data$Index))
# Plot with specified colors for each index
plot <- ggplot(data, aes(x = Year, y = Value, color = Index)) +
geom_line(size = 1) +
scale_x_continuous(breaks = seq(min(data$Year), max(data$Year), by = 2)) +
labs(title = title, x = "Year", y = y_label) +
scale_color_manual(values = c("spi6" = "orange", "spei6" = "blue")) +
theme_minimal() +
theme(
legend.title = element_blank(),
axis.text.x = element_text(angle = 90, hjust = 1)
)
print(plot)
return(plot)
}
plot5 <- indices_bar_plot(year_summary, c("spi6", "spei6"), paste0(sheetstation, " SPI6 and SPEI6 Indices Over Time"), "spi6, spei6")
plot6 <- indices_bar_plot(sample_station, c("spi3", "spei3"), paste0(sheetstation, " SPI3 and SPEI3 Indices Over Time"), "spi3, spei3")
indices_line_plot <- function(data, y_vars, title, y_label) {
# Reshape data for ggplot2
data <- data %>%
gather(key = "Index", value = "Value", all_of(y_vars))
# Plot with specified colors for each index
plot <- ggplot(data, aes(x = Year, y = Value, color = Index)) +
geom_line(size = 1) +
scale_x_continuous(breaks = seq(min(data$Year), max(data$Year), by = 2)) +
labs(title = title, x = "Year", y = y_label) +
scale_color_manual(values = c("spi6" = "orange", "spei6" = "blue")) +
theme_minimal() +
theme(
legend.title = element_blank(),
axis.text.x = element_text(angle = 90, hjust = 1)
)
print(plot)
return(plot)
}
plot5 <- indices_line_plot(year_summary, c("spi6", "spei6"), paste0(sheetstation, " SPI6 and SPEI6 Indices Over Time"), "spi6, spei6")
plot6 <- indices_line_plot(sample_station, c("spi3", "spei3"), paste0(sheetstation, " SPI3 and SPEI3 Indices Over Time"), "spi3, spei3")
plot6 <- indices_line_plot(year_summary, c("spi3", "spei3"), paste0(sheetstation, " SPI3 and SPEI3 Indices Over Time"), "spi3, spei3")
gc()
source("~/Documents/DROUGHT ANALYSIS /test.R")
source("~/Documents/DROUGHT ANALYSIS /test.R")
indices_line_plot <- function(data, y_vars, title, y_label) {
# Reshape data for ggplot2
data <- data %>%
gather(key = "Index", value = "Value", all_of(y_vars))
# Plot with specified colors for each index
plot <- ggplot(data, aes(x = Year, y = Value, color = Index)) +
geom_line(size = 1) +
scale_x_continuous(breaks = seq(min(data$Year), max(data$Year), by = 2)) +
labs(title = title, x = "Year", y = y_label) +
scale_color_manual(values = c(!!sym(y_vars[1] = "orange", !!sym(y_vars[2] = "blue")) +
indices_line_plot <- function(data, y_vars, title, y_label) {
# Reshape data for ggplot2
data <- data %>%
gather(key = "Index", value = "Value", all_of(y_vars))
# Plot with specified colors for each index
plot <- ggplot(data, aes(x = Year, y = Value, color = Index)) +
geom_line(size = 1) +
scale_x_continuous(breaks = seq(min(data$Year), max(data$Year), by = 2)) +
labs(title = title, x = "Year", y = y_label) +
scale_color_manual(values = c(paste0(y_vars[1]) = "orange", paste0(y_vars[2]) = "blue")) +
indices_line_plot <- function(data, y_vars, title, y_label) {
# Reshape data for ggplot2
data <- data %>%
gather(key = "Index", value = "Value", all_of(y_vars))
# Plot with specified colors for each index
plot <- ggplot(data, aes(x = Year, y = Value, color = Index)) +
geom_line(size = 1) +
scale_x_continuous(breaks = seq(min(data$Year), max(data$Year), by = 2)) +
labs(title = title, x = "Year", y = y_label) +
scale_color_manual(values = c(paste0(y_vars[1]) := "orange", paste0(y_vars[2]) := "blue")) +
theme_minimal() +
theme(
legend.title = element_blank(),
axis.text.x = element_text(angle = 90, hjust = 1)
)
print(plot)
return(plot)
}
plot5 <- indices_line_plot(year_summary, c("spi6", "spei6"), paste0(sheetstation, " SPI6 and SPEI6 Indices Over Time"), "spi6, spei6")
indices_bar_plot <- function(data, y_vars, title, y_label) {
# Reshape data for ggplot2
data <- data %>%
gather(key = "Index", value = "Value", all_of(y_vars))
# Dynamically create a color vector
colors <- c("red", "blue")[seq_along(y_vars)]
names(colors) <- y_vars
# Check the levels of the Index variable
print("Levels of Index after gathering:")
print(unique(data$Index))
# Plot with dynamically specified colors for each index
plot <- ggplot(data, aes(x = Year, y = Value, color = Index)) +
geom_line(size = 1) +
scale_x_continuous(breaks = seq(min(data$Year), max(data$Year), by = 2)) +
labs(title = title, x = "Year", y = y_label) +
scale_color_manual(values = colors) +
theme_minimal() +
theme(
legend.title = element_blank(),
axis.text.x = element_text(angle = 90, hjust = 1)
)
print(plot)
return(plot)
}
plot5 <- indices_line_plot(year_summary, c("spi6", "spei6"), paste0(sheetstation, " SPI6 and SPEI6 Indices Over Time"), "spi6, spei6")
indices_line_plot <- function(data, y_vars, title, y_label) {
# Reshape data for ggplot2
data <- data %>%
gather(key = "Index", value = "Value", all_of(y_vars))
# Dynamically create a color vector
colors <- c("red", "blue")[seq_along(y_vars)]
names(colors) <- y_vars
# Check the levels of the Index variable
print("Levels of Index after gathering:")
print(unique(data$Index))
# Plot with dynamically specified colors for each index
plot <- ggplot(data, aes(x = Year, y = Value, color = Index)) +
geom_line(size = 1) +
scale_x_continuous(breaks = seq(min(data$Year), max(data$Year), by = 2)) +
labs(title = title, x = "Year", y = y_label) +
scale_color_manual(values = colors) +
theme_minimal() +
theme(
legend.title = element_blank(),
axis.text.x = element_text(angle = 90, hjust = 1)
)
print(plot)
return(plot)
}
plot5 <- indices_line_plot(year_summary, c("spi6", "spei6"), paste0(sheetstation, " SPI6 and SPEI6 Indices Over Time"), "spi6, spei6")
plot6 <- indices_line_plot(year_summary, c("spi3", "spei3"), paste0(sheetstation, " SPI3 and SPEI3 Indices Over Time"), "spi3, spei3")
plot7 <- indices_line_plot(year_summary, c("spi12", "spei12"), paste0(sheetstation, " SPI12 and SPEI12 Indices Over Time"), "spi12, spei12")
# Generate plots for each defined period
plot15 <- create_plots_for_period(climate_data, "Base Period")
gc()
source("~/Documents/DROUGHT ANALYSIS /test.R")
source("~/Documents/DROUGHT ANALYSIS /test.R")
gc()
source("~/Documents/DROUGHT ANALYSIS /test.R")
gc()
source("~/Documents/DROUGHT ANALYSIS /test.R")
indices_line_plot <- function(data, y_vars, title, y_label) {
# Reshape data for ggplot2
data <- data %>%
gather(key = "Index", value = "Value", all_of(y_vars))
# Dynamically create a color vector
colors <- c("red", "blue")[seq_along(y_vars)]
names(colors) <- y_vars
# Check the levels of the Index variable
print("Levels of Index after gathering:")
print(unique(data$Index))
# Plot with dynamically specified colors for each index
plot <- ggplot(data, aes(x = Year, y = Value, color = Index)) +
geom_line(size = 1) +
scale_x_continuous(breaks = seq(min(data$Year), max(data$Year), by = 2)) +
labs(title = title, x = "Year", y = y_label) +
scale_color_manual(values = colors) +
theme_minimal() +
theme(
legend.title = element_blank(),
axis.text.x = element_text(angle = 90, hjust = 1)
) +
# Add bold black line at y = 0
geom_hline(yintercept = 0, color = "black", size = 1.5)  # Bold black line
print(plot)
return(plot)
}
# Generate plots for each defined period
plot15 <- create_plots_for_period(climate_data, "Base Period", sheetstation)
plot16 <- create_plots_for_period(climate_data, "Climate Change Onset", sheetstation)
gc()
source("~/Documents/DROUGHT ANALYSIS /test.R")
gc()
source("~/Documents/DROUGHT ANALYSIS /test.R")
View(year_summary)
View(Chara_spei12)
View(sample_station)
gc()
source("~/Documents/DROUGHT ANALYSIS /test.R")
View(add_drought_characteristics)
gc()
source("~/Documents/DROUGHT ANALYSIS /test.R")
gc()
source("~/Documents/DROUGHT ANALYSIS /test.R")
gc()
source("~/Documents/DROUGHT ANALYSIS /main.R")
gc()
source("~/Documents/DROUGHT ANALYSIS /main.R")
gc()
