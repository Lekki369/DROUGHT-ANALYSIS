# Print the plots
print(plot12)
# Plot distributions
plot1 <- ggplot(drought_long_spi, aes(x = Category, y = Count, fill = Category)) +
geom_bar(stat = "identity") +
labs(title = paste0(sheetstation, " Drought Category SPI Distribution"), x = "Drought Category", y = "Total Count") +
theme_minimal() +
scale_fill_viridis_d() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(plot1)
View(drought_counts)
plot2 <- ggplot(drought_long_spei, aes(x = Category, y = Count, fill = Category)) +
geom_bar(stat = "identity") +
labs(title = paste0(sheetstation, " Drought Category SPEI Distribution"), x = "Drought Category", y = "Total Count") +
theme_minimal() +
scale_fill_viridis_d() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(plot2)
# Line plot of drought categories over the years
drought_long_spi <- drought_counts %>%
pivot_longer(cols = starts_with("spi"), names_to = c("Index", "Category"), names_sep = "_", values_to = "Count")
plot3 <- ggplot(drought_long_spi, aes(x = Year, y = Count, color = Category)) +
geom_line(linewidth = 1) +
geom_point(size = 2) +
labs(title = paste0(sheetstation, " Drought Categories Of SPI Over the Years"), x = "Year", y = "Count of Drought Events") +
theme_minimal() +
theme(legend.title = element_blank()) +
scale_color_viridis_d() +
facet_wrap(~ Category + Index, ncol = 2, scales = "free_y")
print(plot3)
View(drought_long_spi)
# Line plot of drought categories over the years
drought_long_spi <- drought_counts %>%
pivot_longer(cols = starts_with("spi"),
names_to = c("Index", "Category"),
names_sep = "_",
values_to = "Count")
# Create the plot
plot3 <- ggplot(drought_long_spi, aes(x = Year, y = Count, color = Category)) +
geom_line(linewidth = 1) +  # Line plot for trend
geom_point(size = 2) +  # Points for individual data points
labs(title = paste0(sheetstation, " Drought Categories of SPI Over the Years"),
x = "Year", y = "Count of Drought Events") +  # Axis labels and title
theme_minimal() +  # Minimal theme
theme(legend.title = element_blank()) +  # Remove legend title
scale_color_viridis_d() +  # Color scale for categories (Mild, Severe, Extreme)
facet_wrap(~ Index, ncol = 1, scales = "free_y")  # Separate plot for each SPI index
# Print the plot
print(plot3)
# Line plot of drought categories over the years
drought_long_spi <- drought_counts %>%
pivot_longer(cols = starts_with("spi"),
names_to = c("Index", "Category"),
names_sep = "_",
values_to = "Count")
# Filter for SPI-3 data
drought_spi3 <- drought_long_spi %>% filter(Index == "spi3")
# Create the plot for SPI-3
plot3 <- ggplot(drought_spi3, aes(x = Year, y = Count, color = Category)) +
geom_line(linewidth = 1) +  # Line plot for trend
geom_point(size = 2) +  # Points for individual data points
labs(title = paste0(sheetstation, " Drought Categories of SPI-3 Over the Years"),
x = "Year", y = "Count of Drought Events") +  # Axis labels and title
theme_minimal() +  # Minimal theme
theme(legend.title = element_blank()) +  # Remove legend title
scale_color_viridis_d()  # Color scale for categories (Mild, Severe, Extreme)
# Print the plot for SPI-3
print(plot3)
# Filter for SPI-6 data
drought_spi6 <- drought_long_spi %>% filter(Index == "spi6")
# Create the plot for SPI-6
plot6 <- ggplot(drought_spi6, aes(x = Year, y = Count, color = Category)) +
geom_line(linewidth = 1) +  # Line plot for trend
geom_point(size = 2) +  # Points for individual data points
labs(title = paste0(sheetstation, " Drought Categories of SPI-6 Over the Years"),
x = "Year", y = "Count of Drought Events") +  # Axis labels and title
theme_minimal() +  # Minimal theme
theme(legend.title = element_blank()) +  # Remove legend title
scale_color_viridis_d()  # Color scale for categories (Mild, Severe, Extreme)
# Print the plot for SPI-6
print(plot6)
# Filter for SPI-12 data
drought_spi12 <- drought_long_spi %>% filter(Index == "spi12")
# Create the plot for SPI-12
plot12 <- ggplot(drought_spi12, aes(x = Year, y = Count, color = Category)) +
geom_line(linewidth = 1) +  # Line plot for trend
geom_point(size = 2) +  # Points for individual data points
labs(title = paste0(sheetstation, " Drought Categories of SPI-12 Over the Years"),
x = "Year", y = "Count of Drought Events") +  # Axis labels and title
theme_minimal() +  # Minimal theme
theme(legend.title = element_blank()) +  # Remove legend title
scale_color_viridis_d()  # Color scale for categories (Mild, Severe, Extreme)
# Print the plot for SPI-12
print(plot12)
# Line plot of drought categories over the years
drought_long_spi <- drought_counts %>%
pivot_longer(cols = starts_with("spi"),
names_to = c("Index", "Category"),
names_sep = "_",
values_to = "Count")
# Create the plot for all SPI categories (SPI-3, SPI-6, SPI-12)
plot_all <- ggplot(drought_long_spi, aes(x = Year, y = Count, color = Category)) +
geom_line(linewidth = 1) +  # Line plot for trend
geom_point(size = 2) +  # Points for individual data points
labs(title = paste0(sheetstation, " Drought Categories of SPI Over the Years"),
x = "Year", y = "Count of Drought Events") +  # Axis labels and title
theme_minimal() +  # Minimal theme
theme(legend.title = element_blank()) +  # Remove legend title
scale_color_viridis_d() +  # Color scale for categories (Mild, Severe, Extreme)
facet_wrap(~ Index + Category, ncol = 3, scales = "free_y")  # Facet by both SPI index and Category
# Print the combined plot with mini-plots for each category
print(plot_all)
# Line plot of drought categories over the years
drought_long_spi <- drought_counts %>%
pivot_longer(cols = starts_with("spi"),
names_to = c("Index", "Category"),
names_sep = "_",
values_to = "Count")
# Create the plot using histograms
plot_histogram <- ggplot(drought_long_spi, aes(x = Count, fill = Category)) +
geom_histogram(binwidth = 1, alpha = 0.7, position = "dodge") +  # Histogram for counts, dodged for categories
labs(title = paste0(sheetstation, " Drought Categories of SPI Over the Years"),
x = "Count of Drought Events", y = "Frequency") +  # Axis labels and title
theme_minimal() +  # Minimal theme
theme(legend.title = element_blank()) +  # Remove legend title
scale_fill_viridis_d() +  # Fill color for categories (Mild, Severe, Extreme)
facet_wrap(~ Index + Category, ncol = 3, scales = "free_y")  # Facet by both SPI index and Category
# Print the histogram plot
print(plot_histogram)
# Line plot of drought categories over the years
drought_long_spi <- drought_counts %>%
pivot_longer(cols = starts_with("spi"),
names_to = c("Index", "Category"),
names_sep = "_",
values_to = "Count")
# Create the bar plot using geom_bar()
plot_bar <- ggplot(drought_long_spi, aes(x = Category, y = Count, fill = Category)) +
geom_bar(stat = "identity", position = "dodge") +  # Bar plot for total count of drought events
labs(title = paste0(sheetstation, " Drought Categories of SPI Over the Years"),
x = "Drought Category", y = "Total Count of Drought Events") +  # Axis labels and title
theme_minimal() +  # Minimal theme
theme(legend.title = element_blank()) +  # Remove legend title
scale_fill_viridis_d() +  # Fill color for categories (Mild, Severe, Extreme)
facet_wrap(~ Index, ncol = 3)  # Facet by SPI index (SPI-3, SPI-6, SPI-12)
# Print the bar plot
print(plot_bar)
drought_long_spei <- drought_counts %>%
pivot_longer(cols = starts_with("spei"), names_to = c("Index", "Category"), names_sep = "_", values_to = "Count")
drought_long_spei <- drought_counts %>%
pivot_longer(cols = starts_with("spei"),
names_to = c("Index", "Category"),
names_sep = "_",
values_to = "Count")
plot4 <- ggplot(drought_long_spei, aes(x = Category, y = Count, fill = Category)) +
geom_bar(stat = "identity", position = "dodge") +  # Bar plot for total count of drought events
labs(title = paste0(sheetstation, " Drought Categories of SPEI Over the Years"),
x = "Drought Category", y = "Total Count of Drought Events") +  # Axis labels and title
theme_minimal() +  # Minimal theme
theme(legend.title = element_blank()) +  # Remove legend title
scale_fill_viridis_d() +  # Fill color for categories (Mild, Severe, Extreme)
facet_wrap(~ Index, ncol = 3)  # Facet by SPEI index (SPEI-3, SPEI-6, SPEI-12)
print(plot4)
print(plot14)
# Separate plot for Precipitation (Prec.)
plot14 <- ggplot(sample_station, aes(x = Year)) +
geom_point(aes(y = Prec.), color = "green", size = 2) +
geom_smooth(aes(y = Prec.), method = "loess", se = FALSE, color = "red") +
labs(title = "Trend of Precipitation Over Time",
x = "Year", y = "Precipitation",
caption = "Green: Precipitation") +
theme_minimal()
# Print the plots
print(plot12)
print(plot13)
print(plot14)
gc()
facet_wrap(~ Index, ncol = 1, scales = "free_y")  # Separate plot for each SPI index
source("~/Documents/DROUGHT ANALYSIS /Kadat_refactored.R")
print(plot3)
plot_timeseries_with_changepoints <- function(data, changepoint_summary, variable_name, title) {
# Extract the changepoint locations from the summary
changepoint_locations <- as.numeric(unlist(strsplit(changepoint_summary$Changepoint_Locations, ",")))
# Create the base time series plot
plot <- ggplot(data, aes(x = Year)) +
geom_line(aes(y = !!sym(variable_name)), color = "blue", size = 1) +  # Time series line
geom_point(aes(y = !!sym(variable_name)), color = "blue", size = 2) +  # Points on the time series
labs(title = title, x = "Year", y = variable_name) +  # Title and axis labels
theme_minimal() +  # Minimal theme
theme(legend.position = "none")  # Remove legend
# Add vertical lines for each changepoint
for (cpt in changepoint_locations) {
plot <- plot + geom_vline(xintercept = cpt, color = "red", linetype = "dashed", size = 1)
}
return(plot)
}
# Example: Plot for Precipitation
plot_prec <- plot_timeseries_with_changepoints(sample_station, change_point_prec_summary, "Prec.", "Time Series for Precipitation with Changepoints")
print(plot_prec)
# Example: Plot for Tmin
plot_tmin <- plot_timeseries_with_changepoints(sample_station, change_point_tmin_summary, "Tmin", "Time Series for Tmin with Changepoints")
print(plot_tmin)
# Example: Plot for Tmax
plot_tmax <- plot_timeseries_with_changepoints(sample_station, change_point_tmax_summary, "Tmax", "Time Series for Tmax with Changepoints")
print(plot_tmax)
View(climate_analysis_results)
plot_timeseries_by_period <- function(df, variable_name, title) {
ggplot(df, aes(x = Year, y = !!sym(variable_name), color = Period)) +
geom_line(size = 1) +
geom_point(size = 2) +
labs(title = title, x = "Year", y = variable_name) +
theme_minimal() +
scale_color_manual(values = c("Base Period" = "blue",
"Climate Change Onset" = "orange",
"Accelerated Climate Change" = "red",
"Other" = "gray")) +
theme(legend.title = element_blank())
}
# Plot for Tmin
plot_tmin <- plot_timeseries_by_period(sample_station, "Tmin", "Tmin Time Series by Climate Periods")
print(plot_tmin)
plot_timeseries_by_period <- function(df, variable_name, title) {
ggplot(df, aes(x = Year, y = !!sym(variable_name), color = Period)) +
geom_line(size = 1) +
geom_point(size = 2) +
labs(title = title, x = "Year", y = variable_name) +
theme_minimal() +
scale_color_manual(values = c("Base Period" = "blue",
"Climate Change Onset" = "orange",
"Accelerated Climate Change" = "red",
"Other" = "gray")) +
theme(legend.title = element_blank())
}
# Define periods
base_period <- sample_station$Year[sample_station$Year >= 1960 & sample_station$Year <= 1989]
change_period1 <- sample_station$Year[sample_station$Year >= 1990 & sample_station$Year <= 2004]
change_period2 <- sample_station$Year[sample_station$Year >= 2005 & sample_station$Year <= 2018]
# Add Period column to the data
sample_station <- sample_station %>%
mutate(Period = case_when(
Year %in% base_period ~ "Base Period",
Year %in% change_period1 ~ "Climate Change Onset",
Year %in% change_period2 ~ "Accelerated Climate Change",
TRUE ~ "Other"
))
# Plot for Tmin
plot_tmin <- plot_timeseries_by_period(sample_station, "Tmin", "Tmin Time Series by Climate Periods")
print(plot_tmin)
gc()
source("~/Documents/DROUGHT ANALYSIS /Kadat_refactored.R")
View(change_point_prec_summary)
View(clean_change_point_prec)
View(climate_analysis_results)
# Call the function
climate_analysis_results <- climatological_analysis(sample_station, base_period, change_period1, change_period2)
# Create the directory if it doesn't exist
dir.create(paste0("results/stations/", sheetstation), recursive = TRUE)
print(base_period)
print(Prec.)
print(Tmax)
print(sample_station$Tmin)
base_period1<- c(base_period)
base_period1 <- c(base_period)
print(base_period)
test<-select(base_period,  sample_station$Tmin)
test <- select(base_period,sample_station$Tmin)
filtered_data <- data %>%
filter(year %in% c(2002, 2008)) %>%
select(year, sample_station$Tmin)
filtered_data <- sample_station %>%
filter(year %in% base_period) %>%
select(year, sample_station$Tmin)
filtered_data <- sample_station %>%
filter(year %in% base_period) %>%
select(year, Tmin)
filtered_data <- sample_station %>%
filter(year %in% c(base_period)) %>%
select(year, Tmin)
filtered_data <- sample_station %>%
filter(year %in% c(base_period))
filtered_data <- sample_station %>%
filter(year %in% base_period)
test <-mutate(c(base_period))
test <-mutate(base_period)
test <-mutate(base_period = c(base_period))
test <- test %>% mutate(base_period = c(base_period))
View(climate_analysis_results)
test <- climate_analysis_results %>% mutate(base_period = c(base_period))
filtered_data <- sample_station %>%
filter(year %in% base_period) %>%
select(year, tmin)
filtered_data <- sample_station %>%
filter(year %in% base_period)
rlang::last_trace()
filtered_data <- sample_station %>%
filter(year %in% base_period)
filtered_data <- sample_station %>%
filter(as.numeric(Year) %in% base_period)
View(filtered_data)
filtered_data <- sample_station %>%
filter(as.numeric(Year) %in% base_period) %>%
select(year, tmin)
filtered_data <- sample_station %>%
filter(as.numeric(Year) %in% base_period) %>%
select(Year, Tmin)
source("~/Documents/DROUGHT ANALYSIS /Kadat_refactored.R")
tes<-   select(filtered_data$Year, filtered_data$Tmin)
filtered_data <- sample_station %>%
filter(as.numeric(Year) %in% base_period)
tes<-   select(filtered_data$Year, filtered_data$Tmin)
View(filtered_data)
tes<-   c(filtered_data$Year, filtered_data$Tmin)
filtered_data_period <- sample_station %>%
filter(as.numeric(Year) %in% base_period)
ggplot(filtered_data_period, aes(x = Year, y =Tmin )) +
geom_line() +
labs(title = "Time Series Plot of Tmin",
x = "Year",
y = "Precipitation") +
theme_minimal()
ggplot(filtered_data_period, aes(x = Month, y =Tmin )) +
geom_line() +
labs(title = "Time Series Plot of Tmin",
x = "Year",
y = "Precipitation") +
theme_minimal()
filtered_data_base_period
plot16 <-ggplot(filtered_data_base_period, aes(x = Month, y =Tmax)) +
geom_line() +
labs(title = "Time Series Plot of Tmin",
x = "Year",
y = "Tmax") +
theme_minimal()
filtered_data_base_period <- sample_station %>%
filter(as.numeric(Year) %in% base_period)
plot15 <-ggplot(filtered_data_base_period, aes(x = Month, y =Tmin )) +
geom_line() +
labs(title = "Time Series Plot of Tmin",
x = "Year",
y = "Tmin") +
theme_minimal()
print(plot15)
plot16 <-ggplot(filtered_data_base_period, aes(x = Month, y =Tmax)) +
geom_line() +
labs(title = "Time Series Plot of Tmin",
x = "Year",
y = "Tmax") +
theme_minimal()
print(plot16)
plot17 <-ggplot(filtered_data_base_period, aes(x = Month, y =Prec.)) +
geom_line() +
labs(title = "Time Series Plot of Prec",
x = "Year",
y = "Prec") +
theme_minimal()
print(plot17)
# Function to add regression line equation and R-squared to the plot
add_regression_eqn <- function(plot, data, y_var) {
model <- lm(as.formula(paste(y_var, "~ Month")), data = data)  # Linear model
# Extract the coefficients
coef <- coef(model)
intercept <- round(coef[1], 2)
slope <- round(coef[2], 2)
# Calculate R-squared value
r_squared <- round(summary(model)$r.squared, 2)
# Equation and R-squared label
eqn_label <- paste("y = ", intercept, " + ", slope, "x\nR² = ", r_squared)
# Add equation and R-squared to the plot
plot +
geom_smooth(method = "lm", se = FALSE, color = "blue") +  # Trend line
geom_text(aes(x = max(Month), y = max(get(y_var)), label = eqn_label),
hjust = 1.1, vjust = 1.1, color = "red", size = 5)
}
# Filter data for the base period
filtered_data_base_period <- sample_station %>%
filter(as.numeric(Year) %in% base_period)
# Plot for Tmin
plot15 <- ggplot(filtered_data_base_period, aes(x = Month, y = Tmin)) +
geom_line() +
labs(title = "Base Period Time Series Plot of Tmin", x = "Year", y = "Tmin") +
theme_minimal()
plot15 <- add_regression_eqn(plot15, filtered_data_base_period, "Tmin")
print(plot15)
# Plot for Tmax
plot16 <- ggplot(filtered_data_base_period, aes(x = Month, y = Tmax)) +
geom_line() +
labs(title = "Base Period Time Series Plot of Tmax", x = "Year", y = "Tmax") +
theme_minimal()
plot16 <- add_regression_eqn(plot16, filtered_data_base_period, "Tmax")
print(plot16)
# Plot for Precipitation (Prec.)
plot17 <- ggplot(filtered_data_base_period, aes(x = Month, y = Prec.)) +
geom_line() +
labs(title = "Base Period Time Series Plot of Precipitation", x = "Year", y = "Prec.") +
theme_minimal()
plot17 <- add_regression_eqn(plot17, filtered_data_base_period, "Prec.")
print(plot17)
}
}
# Create the directory if it doesn't exist
dir.create(paste0("results/stations/", sheetstation), recursive = TRUE)
# Timeseries Plot for Base Period
filtered_data_base_period <- sample_station %>%
filter(as.numeric(Year) %in% base_period)
# Plot for Tmin
plot15 <- ggplot(filtered_data_base_period, aes(x = Month, y = Tmin)) +
geom_line() +
labs(title = "Base Period Time Series Plot of Tmin", x = "Year", y = "Tmin") +
theme_minimal()
print(plot15)
# Timeseries Plot for Base Period
filtered_data_base_period <- sample_station %>%
filter(as.numeric(Year) %in% base_period)
# Plot for Tmin
plot15 <- ggplot(filtered_data_base_period, aes(x = Month, y = Tmin)) +
geom_line() +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(title = "Base Period Time Series Plot of Tmin", x = "Year", y = "Tmin") +
theme_minimal()
print(plot15)
# Plot for Tmax
plot16 <- ggplot(filtered_data_base_period, aes(x = Month, y = Tmax)) +
geom_line() +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(title = "Base Period Time Series Plot of Tmax", x = "Year", y = "Tmax") +
theme_minimal()
print(plot16)
# Plot for Precipitation (Prec.)
plot17 <- ggplot(filtered_data_base_period, aes(x = Month, y = Prec.)) +
geom_line() +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(title = "Base Period Time Series Plot of Precipitation", x = "Year", y = "Prec.") +
theme_minimal()
print(plot17)
# Timeseries plot for Climate chage onset
filtered_data_onset_period <- sample_station %>%
filter(as.numeric(Year) %in% change_period1)
View(climate_analysis_results)
# Plot for Tmin
plot18 <- ggplot(filtered_data_onset_period, aes(x = Month, y = Tmin)) +
geom_line() +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(title = "Climate Change Onset Time Series Plot of Tmin", x = "Year", y = "Tmin") +
theme_minimal()
print(plot18)
# Plot for Tmax
plot19 <- ggplot(filtered_data_onset_period, aes(x = Month, y = Tmax)) +
geom_line() +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(title = "Climate Change Onset Time Series Plot of Tmax", x = "Year", y = "Tmax") +
theme_minimal()
print(plot19)
# Plot for Precipitation (Prec.)
plot20 <- ggplot(filtered_data_onset_period, aes(x = Month, y = Prec.)) +
geom_line() +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(title = "Climate Change Onset Time Series Plot of Precipitation", x = "Year", y = "Prec.") +
theme_minimal()
print(plot20)
# Timeseries Plot for Base Period
filtered_data_accelerated_period <- sample_station %>%
filter(as.numeric(Year) %in% change_period2)
# Plot for Tmin
plot21 <- ggplot(filtered_data_accelerated_period, aes(x = Month, y = Tmin)) +
geom_line() +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(title = "Accelerated Climate Change Time Series Plot of Tmin", x = "Year", y = "Tmin") +
theme_minimal()
print(plot21)
# Plot for Tmax
plot22 <- ggplot(filtered_data_accelerated_period, aes(x = Month, y = Tmax)) +
geom_line() +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(title = "Accelerated Climate Change Time Series Plot of Tmax", x = "Year", y = "Tmax") +
theme_minimal()
print(plot22)
# Plot for Precipitation (Prec.)
plot23 <- ggplot(filtered_data_accelerated_period, aes(x = Month, y = Prec.)) +
geom_line() +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(title = "Accelerated Climate Change Time Series Plot of Precipitation", x = "Year", y = "Prec.") +
theme_minimal()
print(plot23)
gc()
source("~/Documents/DROUGHT ANALYSIS /Kadat_refactored.R")
View(Chara_spei3)
gc()
source("~/Documents/DROUGHT ANALYSIS /Kadat_refactored.R")
gc()
source("~/Documents/DROUGHT ANALYSIS /Kadat_refactored.R")
# Plot for Tmin
plot15 <- ggplot(filtered_data_base_period, aes(x = Year, y = Tmin)) +
geom_line() +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(title = "Base Period Time Series Plot of Tmin", x = "Year", y = "Tmin") +
theme_minimal()
print(plot15)
Month
Month
# Plot for Tmin
plot15 <- ggplot(filtered_data_base_period, aes(x = Month, y = Tmin)) +
geom_line() +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(title = "Base Period Time Series Plot of Tmin", x = "Year", y = "Tmin") +
theme_minimal()
print(plot15)
# Plot for Tmin
plot15 <- ggplot(filtered_data_base_period, aes(x = Year, y = Tmin)) +
geom_line() +
geom_smooth(method = "lm", se = FALSE, color = "red") +
labs(title = "Base Period Time Series Plot of Tmin", x = "Year", y = "Tmin") +
theme_minimal()
print(plot15)
